#pragma checksum "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\StockManager\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1c4b54825d333401efafd8d4867cb86d6c362fcc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_StockManager_Views_Home_Index), @"mvc.1.0.view", @"/Areas/StockManager/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\_ViewImports.cshtml"
using RestaurantManagementSystem;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\_ViewImports.cshtml"
using RestaurantManagementSystem.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1c4b54825d333401efafd8d4867cb86d6c362fcc", @"/Areas/StockManager/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a8c01558d12eac6ac05a704fcfb82ba7e4e3b045", @"/Areas/_ViewImports.cshtml")]
    public class Areas_StockManager_Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 2 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\StockManager\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\StockManager\Views\Home\Index.cshtml"
   
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject( ViewBag.TotalQueantity );
    

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<h1>Index</h1>\n<div class=\"btn-group\">\n");
#nullable restore
#line 12 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\StockManager\Views\Home\Index.cshtml"
     if (@ViewBag.InredientList != null)
    {
        

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\StockManager\Views\Home\Index.cshtml"
         foreach (var item in ViewBag.InredientList)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <button type=\"button\" class=\"btn btn-primary\" data-id=\"");
#nullable restore
#line 16 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\StockManager\Views\Home\Index.cshtml"
                                                              Write(item.IngredientId);

#line default
#line hidden
#nullable disable
            WriteLiteral("\">");
#nullable restore
#line 16 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\StockManager\Views\Home\Index.cshtml"
                                                                                  Write(item.IngredientName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</button>\n");
#nullable restore
#line 17 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\StockManager\Views\Home\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\StockManager\Views\Home\Index.cshtml"
         
    }
    else
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <p>No Data found to create chart</p>\n");
#nullable restore
#line 22 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\StockManager\Views\Home\Index.cshtml"
    }

#line default
#line hidden
#nullable disable
            WriteLiteral("    <br />\n    <br />\n\n</div>\n\n<div  style=\"height:600px;width:800px\" id=\"ParentDivChart\">\n    <h1 class=\"text-center\">Chart</h1>\n    <canvas id=\"myChart\"></canvas>\n</div>\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"


    
<script type=""text/javascript"">
    
    $("".btn-group button"").click(function () {
        var value = $(this).data(""id"");
        $(this).css({ ""border-bottom"": ""2px solid red"" });
        console.log(value);
        var url = ""/StockManager/Home/LoadChartData"";
        $.getJSON(url, { id: value }, function (data) {
            $('canvas').remove();
            $( ""#ParentDivChart"" ).append( ""<canvas id='myChart'></canvas>"" );
            console.log(data);
            MyChartBar(data);


              
         });
    });
</script>
<script type=""text/javascript"">
    $(document).ready(function () {
        console.log(");
#nullable restore
#line 56 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\StockManager\Views\Home\Index.cshtml"
               Write(XLabels);

#line default
#line hidden
#nullable disable
                WriteLiteral(");\n        MyChartBar(");
#nullable restore
#line 57 "F:\IUBAT\Internship\RMS\RestaurantManagementSystem\Areas\StockManager\Views\Home\Index.cshtml"
              Write(XLabels);

#line default
#line hidden
#nullable disable
                WriteLiteral(@");
    });
    function MyChartBar(Passedata) {
  
        var ctx = document.getElementById('myChart').getContext('2d');
        
        var testdata = Passedata;
        var chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'bar',

            // The data for our dataset
            data: {
                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                datasets: [{
                    label: 'Ingredient Ammount',
                    backgroundColor: 'rgb(255, 15, 85)',
                    borderColor: 'rgb(255, 99, 132)',
                    data: testdata
                }]
            },

            // Configuration options go here

           options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
               }
               ,
               legend: {
          displ");
                WriteLiteral("ay: false\n        }\n    }\n});\n      }\n</script>\n");
            }
            );
            WriteLiteral("\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
